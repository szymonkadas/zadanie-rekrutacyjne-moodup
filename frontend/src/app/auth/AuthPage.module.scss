@use "../../styles/variables" as var;
@use "../../styles/mixins" as mix;

.icon {
  width: 64px;
  height: 64px;
}

.mainContentWrapper,
.mainContent,
.mainContentForm {
  @include mix.flex-column;
}

.mainContentWrapper {
  gap: calc(#{var.$defaultSpacing} * 3);
  width: calc(8 / 12 * 100%);
  @include mix.align-items-center;

  .changeAuthAction {
    font-family: var.$altFont;
    transition: var.$defaultTransitionTime;
    a {
      color: var.$textColor;
      font-weight: 700;
      &:hover{
        color: var.$primaryColor;
      }
    }
  }
}

.mainContent {
  @include mix.align-items-center;
  gap: calc(#{var.$defaultSpacing} * 6);
  width: 100%;
  .mainContentTitle {
    font-weight: 400;
    font-family: var.$altFont;
  }
  .mainContentForm {
    gap: calc(#{var.$defaultSpacing} * 4);
    @include mix.align-items-center;
    padding: 0 calc((1 / 8 * 100%) + (#{var.$defaultSpacing} * 2));
    width: 100%;
    * {
      width: 100%;
    }
    button {
      background-color: var.$primaryColor;
      color: var.$backgroundColor;
      font-size: calc(#{var.$grade4Font} - 1px);
      font-weight: 500;
      text-transform: uppercase;
      @include mix.defaultBorder;
      border-radius: calc(#{var.$defaultBorderRadius}/ 2);
      border-color: var.$primaryColor;
      transition: var.$defaultTransitionTime;
      &:disabled {
        //figma values
        border-color: transparent;
        background-color: rgba(0,0,0, 0.12);
        color: rgba(0,0,0, 0.38);
        cursor: not-allowed;
      }
      &:hover:active{
        background-color: var.$secondaryColor;
        border-color: var.$secondaryColor;
      }
    }
  }
  .mainContentError{
    color: var.$primaryColor;
    font-style: italic;
  }
}

.note {
  color: var.$secondaryColor;
  font-style: italic;
  font-weight: 600;
}

